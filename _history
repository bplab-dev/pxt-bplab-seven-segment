{"entries":[{"timestamp":1739412860467,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" id=\"Rk`=ALKuvVZb;xQzg9P6\" x=\"20\" y=\"20"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start"],[0,"\"></"]],"start1":12,"start2":12,"length1":135,"length2":62},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," id=\"/fhk%3{PY1$EFki8Yn,=\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":49,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"/**\n * 7-Segment(Four Digit Display)\n */\n//% weight=1 color=#50A820 icon=\"\\uf0ad\" block=\"7-Segment\"\nnamespace TM1637 {\n    let TM1637_CMD1 = 0x40;\n    let TM1637_CMD2 = 0xC0;\n    let TM1637_CMD3 = 0x80;\n    let _SEGMENTS = [0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71];\n\n    /**\n     * TM1637 LED display\n     */\n    export class TM1637LEDs {\n        buf: Buffer;\n        clk: DigitalPin;\n        dio: DigitalPin;\n        _ON: number;\n        brightness: number;\n        count: number;  // number of LEDs\n\n        init(): void {\n            pins.digitalWritePin(this.clk, 0);\n            pins.digitalWritePin(this.dio, 0);\n            this._ON = 8;\n            this.buf = pins.createBuffer(this.count);\n            this.clear();\n        }\n\n        _start() {\n            pins.digitalWritePin(this.dio, 0);\n            pins.digitalWritePin(this.clk, 0);\n        }\n\n        _stop() {\n            pins.digitalWritePin(this.dio, 0);\n            pins.digitalWritePin(this.clk, 1);\n            pins.digitalWritePin(this.dio, 1);\n        }\n\n        _write_data_cmd() {\n            this._start();\n            this._write_byte(TM1637_CMD1);\n            this._stop();\n        }\n\n        _write_dsp_ctrl() {\n            this._start();\n            this._write_byte(TM1637_CMD3 | this._ON | this.brightness);\n            this._stop();\n        }\n\n        _write_byte(b: number) {\n            for (let i = 0; i < 8; i++) {\n                pins.digitalWritePin(this.dio, (b >> i) & 1);\n                pins.digitalWritePin(this.clk, 1);\n                pins.digitalWritePin(this.clk, 0);\n            }\n            pins.digitalWritePin(this.clk, 1);\n            pins.digitalWritePin(this.clk, 0);\n        }\n\n        /**\n         * set TM1637 intensity, range is [0-8], 0 is off.\n         * @param val the brightness of the TM1637, eg: 7\n         */\n        //% blockId=\"TM1637_set_intensity\" block=\"%tm|set intensity %val\"\n        //% weight=50 blockGap=8\n        //% parts=\"TM1637\"\n        intensity(val: number = 7) {\n            if (val < 1) {\n                this.off();\n                return;\n            }\n            if (val > 8) val = 8;\n            this._ON = 8;\n            this.brightness = val - 1;\n            this._write_data_cmd();\n            this._write_dsp_ctrl();\n        }\n\n        /**\n         * set data to TM1637, with given bit\n         */\n        _dat(bit: number, dat: number) {\n            this._write_data_cmd();\n            this._start();\n            this._write_byte(TM1637_CMD2 | (bit % this.count))\n            this._write_byte(dat);\n            this._stop();\n            this._write_dsp_ctrl();\n        }\n\n        /**\n         * show a number in given position. \n         * @param num number will show, eg: 5\n         * @param bit the position of the LED, eg: 0\n         */\n        //% blockId=\"TM1637_showbit\" block=\"%tm|show digit %num |at %bit\"\n        //% weight=90 blockGap=8\n        //% parts=\"TM1637\"\n        showbit(num: number = 5, bit: number = 0) {\n            this.buf[bit % this.count] = _SEGMENTS[num % 16]\n            this._dat(bit, _SEGMENTS[num % 16])\n        }\n\n        /**\n          * show a number. \n          * @param num is a number, eg: 0\n          */\n        //% blockId=\"TM1637_shownum\" block=\"%tm|show number %num\"\n        //% weight=91 blockGap=8\n        //% parts=\"TM1637\"\n        showNumber(num: number) {\n            if (num < 0) {\n                this._dat(0, 0x40) // '-'\n                num = -num\n            }\n            else\n                this.showbit(Math.idiv(num, 1000) % 10)\n            this.showbit(num % 10, 3)\n            this.showbit(Math.idiv(num, 10) % 10, 2)\n            this.showbit(Math.idiv(num, 100) % 10, 1)\n        }\n\n        /**\n          * show a hex number. \n          * @param num is a hex number, eg: 0\n          */\n        //% blockId=\"TM1637_showhex\" block=\"%tm|show hex number %num\"\n        //% weight=90 blockGap=8\n        //% parts=\"TM1637\"\n        showHex(num: number) {\n            if (num < 0) {\n                this._dat(0, 0x40) // '-'\n                num = -num\n            }\n            else\n                this.showbit((num >> 12) % 16)\n            this.showbit(num % 16, 3)\n            this.showbit((num >> 4) % 16, 2)\n            this.showbit((num >> 8) % 16, 1)\n        }\n\n        /**\n         * show or hide dot point. \n         * @param bit is the position, eg: 1\n         * @param show is show/hide dp, eg: true\n         */\n        //% blockId=\"TM1637_showDP\" block=\"%tm|DotPoint at %bit|show %show\"\n        //% weight=70 blockGap=8\n        //% parts=\"TM1637\"\n        showDP(bit: number = 1, show: boolean = true) {\n            bit = bit % this.count\n            if (show) this._dat(bit, this.buf[bit] | 0x80)\n            else this._dat(bit, this.buf[bit] & 0x7F)\n        }\n\n        /**\n         * clear LED. \n         */\n        //% blockId=\"TM1637_clear\" block=\"clear %tm\"\n        //% weight=80 blockGap=8\n        //% parts=\"TM1637\"\n        clear() {\n            for (let i = 0; i < this.count; i++) {\n                this._dat(i, 0)\n                this.buf[i] = 0\n            }\n        }\n\n        /**\n         * turn on LED. \n         */\n        //% blockId=\"TM1637_on\" block=\"turn on %tm\"\n        //% weight=86 blockGap=8\n        //% parts=\"TM1637\"\n        on() {\n            this._ON = 8;\n            this._write_data_cmd();\n            this._write_dsp_ctrl();\n        }\n\n        /**\n         * turn off LED. \n         */\n        //% blockId=\"TM1637_off\" block=\"turn off %tm\"\n        //% weight=85 blockGap=8\n        //% parts=\"TM1637\"\n        off() {\n            this._ON = 0;\n            this._write_data_cmd();\n            this._write_dsp_ctrl();\n        }\n    }\n\n    /**\n     * create a TM1637 object.\n     * @param clk the CLK pin for TM1637, eg: DigitalPin.P1\n     * @param dio the DIO pin for TM1637, eg: DigitalPin.P2\n     * @param intensity the brightness of the LED, eg: 7\n     * @param count the count of the LED, eg: 4\n     */\n    //% weight=200 blockGap=8\n    //% blockId=\"TM1637_create\" block=\"CLK %clk|DIO %dio|intensity %intensity|LED count %count\"\n    export function create(clk: DigitalPin, dio: DigitalPin, intensity: number, count: number): TM1637LEDs {\n        let tm = new TM1637LEDs();\n        tm.clk = clk;\n        tm.dio = dio;\n        if ((count < 1) || (count > 5)) count = 4;\n        tm.count = count;\n        tm.brightness = intensity;\n        tm.init();\n        return tm;\n    }\n}"],[1,"\n"]],"start1":0,"start2":0,"length1":6465,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"   \""],[-1,"testFiles\": [\n        \"test.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":245,"start2":245,"length1":76,"length2":31}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1739412860466,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Seven Segment - bplab\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1739412886483}